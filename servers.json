[
  {
    "id": "agentql-mcp",
    "name": "AgentQL",
    "description": "Transform unstructured web content into structured data",
    "command": "npx -y agentql-mcp",
    "link": "https://github.com/tinyfish-io/agentql-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "AGENTQL_API_KEY",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "alby-mcp",
    "name": "Alby",
    "description": "Bitcoin Lightning Network integration",
    "command": "npx -y @getalby/alby-mcp-server",
    "link": "https://github.com/getalby/mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "ALBY_API_TOKEN",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "asana-mcp",
    "name": "Asana",
    "description": "Task automation, project tracking, and team collaboration",
    "command": "npx -y @roychri/mcp-server-asana",
    "link": "https://github.com/roychri/mcp-server-asana",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "ASANA_ACCESS_TOKEN",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "autovisualiser",
    "name": "Auto Visualiser",
    "description": "Automatic data visualisation via MCP-UI",
    "command": "",
    "link": "https://github.com/block/goose/tree/main/crates/goose-mcp/src/autovisualiser",
    "installation_notes": "This is a built-in extension that comes with Goose and can be enabled on the Extensions page.",
    "is_builtin": true,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "blender-mcp",
    "name": "Blender",
    "description": "3D modeling and animation integration",
    "command": "uvx blender-mcp",
    "link": "https://github.com/ahujasid/blender-mcp",
    "installation_notes": "Install using uvx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "brave-mcp",
    "name": "Brave Search",
    "description": "Web search capabilities powered by Brave",
    "command": "npx -y @brave/brave-search-mcp",
    "link": "https://github.com/brave/brave-search-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "BRAVE_API_KEY",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "browserbase-mcp",
    "name": "Browserbase",
    "description": "Browser automation and web scraping",
    "command": "npx -y @browserbasehq/mcp-server-browserbase",
    "link": "https://github.com/browserbase/mcp-server-browserbase",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "BROWSERBASE_API_KEY",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "chrome-devtools-mcp",
    "name": "Chrome DevTools",
    "description": "Control and inspect a live Chrome browser",
    "command": "npx -y chrome-devtools-mcp@latest",
    "link": "https://github.com/ChromeDevTools/chrome-devtools-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "cloudflare-mcp",
    "name": "Cloudflare",
    "description": "Cloudflare API integration for DNS and domain management",
    "command": "npx -y @cloudflare/mcp-server-cloudflare",
    "link": "https://github.com/cloudflare/mcp-server-cloudflare",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "CLOUDFLARE_API_TOKEN",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "cloudinary-asset-management-mcp",
    "name": "Cloudinary Asset Management",
    "description": "Cloud-based image and video management",
    "command": "npx -y cloudinary-asset-management-mcp",
    "link": "https://github.com/cloudinary/asset-management-js",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "CLOUDINARY_CLOUD_NAME",
        "description": "Required environment variable",
        "required": true
      },
      {
        "name": "CLOUDINARY_API_KEY",
        "description": "Required environment variable",
        "required": true
      },
      {
        "name": "CLOUDINARY_API_SECRET",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "cognee-mcp",
    "name": "Cognee",
    "description": "Knowledge graph and cognitive AI capabilities",
    "command": "uvx cognee-mcp",
    "link": "https://github.com/topoteretes/cognee",
    "installation_notes": "Install using uvx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "computercontroller",
    "name": "Computer Controller",
    "description": "Built-in computer controls for webscraping, file caching, and automations",
    "command": "",
    "link": "https://github.com/block/goose/tree/main/crates/goose-mcp/src/computercontroller",
    "installation_notes": "This is a built-in extension that comes with Goose and can be enabled on the Extensions page.",
    "is_builtin": true,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "container-use",
    "name": "Container Use",
    "description": "Integrate container workflows with Goose using the Container-Use MCP",
    "command": "npx -y mcp-remote https://container-use.com/mcp",
    "link": "https://container-use.com",
    "installation_notes": "Requires Node.js and Docker.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "context7",
    "name": "Context7",
    "description": "Use up-to-date code and docs",
    "command": "npx -y @upstash/context7-mcp",
    "link": "https://github.com/upstash/context7",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "developer",
    "name": "Developer",
    "description": "Built-in developer tools for file editing and shell command execution",
    "command": "",
    "link": "https://github.com/block/goose/tree/main/crates/goose-mcp/src/developer",
    "installation_notes": "This is a built-in extension that comes with Goose by default. No installation required.",
    "is_builtin": true,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "dev-to",
    "name": "Dev.to",
    "description": "Access Dev.to articles and content (requires local server setup)",
    "url": "http://localhost:3000/mcp",
    "link": "https://github.com/nickytonline/dev-to-mcp",
    "installation_notes": "This is a local extension. You must first clone, install, and run the Dev.to MCP server locally before adding this extension.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [],
    "type": "streamable-http"
  },
  {
    "id": "elevenlabs-mcp",
    "name": "ElevenLabs",
    "description": "Text-to-speech and voice synthesis",
    "command": "npx -y elevenlabs-mcp",
    "link": "https://github.com/elevenlabs/elevenlabs-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "ELEVENLABS_API_KEY",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "fetch",
    "name": "Fetch",
    "description": "Web content fetching and processing capabilities",
    "command": "uvx mcp-server-fetch",
    "link": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
    "installation_notes": "Install using uvx package manager. Note: Some sites may block access via robots.txt.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "figma",
    "name": "Figma",
    "description": "Convert Figma designs into code and extract design context (requires local setup)",
    "url": "http://127.0.0.1:3845/mcp",
    "link": "",
    "installation_notes": "The Figma desktop app must be running with the MCP server enabled.",
    "is_builtin": false,
    "endorsed": true,
    "type": "streamable-http",
    "environmentVariables": []
  },
  {
    "id": "filesystem-mcp",
    "name": "Filesystem",
    "description": "File system operations and management",
    "command": "uvx mcp-server-filesystem",
    "link": "https://github.com/modelcontextprotocol/servers",
    "installation_notes": "Install using uvx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "github-mcp",
    "name": "GitHub",
    "description": "GitHub repository management and operations",
    "url": "https://api.githubcopilot.com/mcp/",
    "link": "https://github.com/github/github-mcp-server",
    "installation_notes": "This is a remote extension. Configure using the endpoint URL in Goose settings.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "GITHUB_PERSONAL_ACCESS_TOKEN",
        "description": "Required environment variable",
        "required": true
      }
    ],
    "type": "streamable-http"
  },
  {
    "id": "gitmcp",
    "name": "GitMCP",
    "description": "Gets latest documentation for any GitHub project",
    "command": "npx -y mcp-remote https://gitmcp.io/docs",
    "link": "https://github.com/idosal/git-mcp",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "google-drive-mcp",
    "name": "Google Drive",
    "description": "Google Drive file management and operations",
    "command": "npx -y @google/drive-mcp",
    "link": "https://github.com/google/drive-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "GOOGLE_DRIVE_CREDENTIALS",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "google-maps-mcp",
    "name": "Google Maps",
    "description": "Maps, geocoding, and location services",
    "command": "npx -y @google/maps-mcp",
    "link": "https://github.com/google/maps-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "GOOGLE_MAPS_API_KEY",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "goose-docs",
    "name": "Goose Docs",
    "description": "GitMCP for Goose documentation",
    "command": "npx mcp-remote https://block.gitmcp.io/goose/",
    "link": "https://github.com/idosal/git-mcp",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "i-ching",
    "name": "I Ching",
    "description": "I Ching divination readings with Wilhelm-Baynes translation - provides traditional three coins method divination with complete hexagram meanings, judgments, and line interpretations",
    "command": "i-ching-mcp-server",
    "link": "https://github.com/threemachines/i-ching",
    "installation_notes": "Install from crates.io using: cargo install i-ching",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "jetbrains",
    "name": "JetBrains",
    "description": "Integrate Goose with any JetBrains IDE",
    "command": "npx -y @jetbrains/mcp-proxy",
    "link": "https://github.com/JetBrains/mcp-jetbrains",
    "installation_notes": "Install using npx package manager. Requires the MCP Server plugin to be installed in your JetBrains IDE.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "kiwi-flight-search",
    "name": "Kiwi Flight Search",
    "description": "Search for flights",
    "url": "https://mcp.kiwi.com",
    "link": "https://mcp-install-instructions.alpic.cloud/servers/kiwi-com-flight-search",
    "installation_notes": "This is a remote extension. Configure using the endpoint URL in Goose settings.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [],
    "type": "streamable-http"
  },
  {
    "id": "knowledge_graph_memory",
    "name": "Knowledge Graph Memory",
    "description": "Graph-based memory system for persistent knowledge storage",
    "command": "npx -y @modelcontextprotocol/server-memory",
    "link": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
    "installation_notes": "Install using npx package manager. Note: Default memory graph location may be hard to find where npx installs the module.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "mbot-mcp",
    "name": "MBot",
    "description": "Chatbot and conversational AI integration",
    "command": "npx -y mbot-mcp",
    "link": "https://github.com/deemkeen/mbotmcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "memory",
    "name": "Memory",
    "description": "Built-in memory system for persistent context and information storage",
    "command": "",
    "link": "https://github.com/block/goose/tree/main/crates/goose-mcp/src/memory",
    "installation_notes": "This is a built-in extension that comes with Goose and can be enabled on the Extensions page.",
    "is_builtin": true,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "mongodb",
    "name": "MongoDB",
    "description": "MongoDB database integration",
    "command": "npx -y mongodb-mcp-server --connection-string mongodb://localhost:27017",
    "link": "https://github.com/mongodb-js/mongodb-mcp-server",
    "installation_notes": "Install using npx package manager. Update connection-string as needed to match your MongoDB environment.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "neon",
    "name": "Neon",
    "description": "Manage Neon Postgres databases, projects, and branches",
    "type": "streamable-http",
    "url": "https://mcp.neon.tech/mcp",
    "link": "https://github.com/neondatabase-labs/mcp-server-neon",
    "installation_notes": "Streaming HTTP extension with OAuth browser authentication to your Neon account.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "netlify-mcp",
    "name": "Netlify",
    "description": "Web deployment and hosting automation",
    "command": "npx -y netlify-mcp",
    "link": "https://github.com/netlify/netlify-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "NETLIFY_ACCESS_TOKEN",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "nostrbook-mcp",
    "name": "NostrBook",
    "description": "Nostr protocol integration for decentralized social",
    "command": "npx -y nostrbook-mcp",
    "link": "https://github.com/nostrbook/nostrbook-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "openmetadata",
    "name": "OpenMetadata",
    "description": "Bring OpenMetadata's single source of truth across your data systems to agents",
    "command": "npx -y mcp-remote http://localhost:8585/mcp --auth-server-url=http://localhost:8585/mcp --client-id=openmetadata --verbose --clean --header Authorization:${AUTH_HEADER}",
    "link": "https://open-metadata.org/mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
        {
            "name": "AUTH_HEADER",
            "description": "OpenMetadata Personal Access Token",
            "required": true
        }
    ]
  },  
  {
    "id": "pdf_read",
    "name": "PDF Reader",
    "description": "Read large and complex PDF documents",
    "command": "uvx mcp-read-pdf",
    "link": "https://github.com/michaelneale/mcp-read-pdf",
    "installation_notes": "Install using uvx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "pieces",
    "name": "Pieces",
    "description": "Provides access to your Pieces long-term memory. You need to have Pieces installed to use this.",
    "url": "http://localhost:39300/model_context_protocol/2024-11-05/sse",
    "link": "https://pieces.app?utm_source=goose&utm_medium=collab&utm_campaign=mcp",
    "installation_notes": "You need to install Pieces first, and have this running.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [],
    "type": "remote"
  },
  {
    "id": "playwright",
    "name": "Playwright",
    "description": "Interact with web pages through structured accessibility snapshots using Playwright",
    "command": "npx @playwright/mcp@latest",
    "link": "https://github.com/microsoft/playwright-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "postgres-mcp",
    "name": "PostgreSQL",
    "description": "PostgreSQL database integration",
    "command": "uvx mcp-server-postgres",
    "link": "https://github.com/modelcontextprotocol/servers",
    "installation_notes": "Install using uvx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "POSTGRES_CONNECTION_STRING",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "puppeteer-mcp",
    "name": "Puppeteer",
    "description": "Browser automation and web scraping",
    "command": "npx -y @puppeteer/mcp-server",
    "link": "https://github.com/puppeteer/mcp-server",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "reddit-mcp",
    "name": "Reddit",
    "description": "Reddit API integration for posts and comments",
    "command": "npx -y reddit-mcp",
    "link": "https://github.com/adhikasp/mcp-reddit",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "REDDIT_CLIENT_ID",
        "description": "Required environment variable",
        "required": true
      },
      {
        "name": "REDDIT_CLIENT_SECRET",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "repomix-mcp",
    "name": "Repomix",
    "description": "Repository analysis and code organization",
    "command": "npx -y repomix-mcp",
    "link": "https://github.com/yamadashy/repomix",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "rube-mcp",
    "name": "Rube",
    "description": "Connect with 500+ apps like Slack, Gmail, Notion and more through unified integrations",
    "type": "streamable-http",
    "url": "https://rube.app/mcp",
    "link": "https://rube.app",
    "installation_notes": "Streaming HTTP extension with OAuth browser authentication to your Rube account.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "selenium-mcp",
    "name": "Selenium",
    "description": "Web browser automation and testing",
    "command": "npx -y selenium-mcp",
    "link": "https://github.com/angiejones/mcp-selenium",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "speech_mcp",
    "name": "Speech Interface",
    "description": "Voice interaction with audio visualization for Goose - enables real-time voice interaction, audio/video transcription, text-to-speech conversion, and multi-speaker audio generation",
    "command": "uvx -p 3.10.14 speech-mcp@latest",
    "link": "https://github.com/Kvadratni/speech-mcp",
    "installation_notes": "Install using uvx package manager. Requires PortAudio to be installed on your system for PyAudio to capture audio from your microphone.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "square-mcp",
    "name": "Square",
    "description": "Square API for payments and business management",
    "command": "npx square-mcp-server start",
    "link": "https://github.com/square/square-mcp-server",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": [
      {
        "name": "ACCESS_TOKEN",
        "description": "Required environment variable",
        "required": true
      },
      {
        "name": "SANDBOX",
        "description": "Required environment variable",
        "required": true
      }
    ]
  },
  {
    "id": "tavily",
    "name": "Tavily Web Search",
    "description": "Web search capabilities powered by Tavily",
    "command": "npx -y tavily-mcp",
    "link": "https://github.com/tavily-ai/tavily-mcp",
    "installation_notes": "Install using uvx package manager. Requires Tavily API key.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": [
      {
        "name": "TAVILY_API_KEY",
        "description": "API key for Tavily web search service",
        "required": true
      }
    ]
  },
  {
    "id": "tutorial-mcp",
    "name": "Tutorial",
    "description": "Built-in tutorial and learning management system",
    "command": "",
    "link": "https://github.com/tutorial/tutorial-mcp",
    "installation_notes": "This is a built-in extension that comes with Goose and can be enabled on the Extensions page.",
    "is_builtin": true,
    "endorsed": false,
    "environmentVariables": []
  },
  {
    "id": "vscode",
    "name": "VSCode",
    "description": "Provides a VSCode IDE integration for development workflows",
    "command": "npx vscode-mcp-server",
    "link": "https://github.com/block/vscode-mcp",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": true,
    "environmentVariables": []
  },
  {
    "id": "youtube-transcript-mcp",
    "name": "YouTube Transcript",
    "description": "YouTube video transcript extraction",
    "command": "uvx --from git+https://github.com/jkawamoto/mcp-youtube-transcript mcp-youtube-transcript",
    "link": "https://github.com/jkawamoto/mcp-youtube-transcript",
    "installation_notes": "Install using uv package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  },
    {
    "id": "gotoHuman-mcp",
    "name": "gotoHuman MCP Server",
    "description": "Adds human approvals into your workflows",
    "command": "npx -y @gotohuman/mcp-server",
    "link": "https://github.com/gotohuman/gotohuman-mcp-server",
    "installation_notes": "Install using npx package manager.",
    "is_builtin": false,
    "endorsed": false,
    "environmentVariables": []
  }
]
