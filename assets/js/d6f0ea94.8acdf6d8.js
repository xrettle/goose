/*! For license information please see d6f0ea94.8acdf6d8.js.LICENSE.txt */
"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[2270],{15536:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"mcp/openmetadata-mcp","title":"OpenMetadata Extension","description":"Add OpenMetadata MCP Server as a Goose Extension","source":"@site/docs/mcp/openmetadata-mcp.md","sourceDirName":"mcp","slug":"/mcp/openmetadata-mcp","permalink":"/goose/docs/mcp/openmetadata-mcp","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"OpenMetadata Extension","description":"Add OpenMetadata MCP Server as a Goose Extension"},"sidebar":"tutorialSidebar","previous":{"title":"Nostrbook Extension","permalink":"/goose/docs/mcp/nostrbook-mcp"},"next":{"title":"PDF Reader Extension","permalink":"/goose/docs/mcp/pdf-mcp"}}');var o=t(74848),s=t(28453),r=t(65537),i=t(79329),l=t(9888);const d={title:"OpenMetadata Extension",description:"Add OpenMetadata MCP Server as a Goose Extension"},c=void 0,u={},h=[{value:"Customizing Your Connection",id:"customizing-your-connection",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Available Operations",id:"available-operations",level:2},{value:"OpenMetadata Operations",id:"openmetadata-operations",level:3},{value:"Example Usage",id:"example-usage",level:2},{value:"Goose Prompt",id:"goose-prompt",level:4},{value:"Goose Output",id:"goose-output",level:4}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://open-metadata.org/mcp",children:"OpenMetadata MCP Server"})," extension allows Goose to interact directly with your OpenMetadata, enabling operations for OpenMetadata assets, glossaries, and lineage. This makes it easy to work with your metadata stored in OpenMetadata through natural language interactions."]}),"\n",(0,o.jsx)(n.admonition,{title:"TLDR",type:"tip",children:(0,o.jsxs)(r.A,{groupId:"interface",children:[(0,o.jsx)(i.A,{value:"ui",label:"Goose Desktop",default:!0,children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"goose://extension?cmd=npx&arg=-y&arg=mcp-remote&arghttp://localhost:8585/mcp&arg=--auth-server-url&arg=http://localhost:8585/mcp&id=openmetadata&name=OpenMetadata&description=OpenMetadata%20integration",children:"Launch the installer"})})}),(0,o.jsxs)(i.A,{value:"cli",label:"Goose CLI",children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Command"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npx -y mcp-remote http://localhost:8585/mcp --auth-server-url=http://localhost:8585/mcp --client-id=openmetadata --verbose --clean --header Authorization:${AUTH_HEADER}\n"})})]})]})}),"\n",(0,o.jsx)(n.h2,{id:"customizing-your-connection",children:"Customizing Your Connection"}),"\n",(0,o.jsxs)(n.p,{children:["The OpenMetadata MCP server connects to an OpenMetadata instance using OpenMetadata's embedded MCP server. We're using ",(0,o.jsx)(n.code,{children:"http://localhost:8585"})," as an example here to access a local OpenMetadata instance, but you can configure this for your own environment. AUTH_HEADER here would an ",(0,o.jsx)(n.a,{href:"https://docs.open-metadata.org/latest/how-to-guides/mcp#adding-a-personal-access-token-to-your-mcp-client",children:"OpenMetadata Personal Access Token (PAT)"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Note that you'll need ",(0,o.jsx)(n.a,{href:"https://nodejs.org/",children:"Node.js"})," installed on your system to run this command, as it uses ",(0,o.jsx)(n.code,{children:"npx"}),". You'll also need a running OpenMetadata instance or access to the ",(0,o.jsx)(n.a,{href:"https://sandbox.open-metadata.org/",children:"OpenMetadata sandbox"}),"."]})}),"\n",(0,o.jsxs)(r.A,{groupId:"interface",children:[(0,o.jsxs)(i.A,{value:"ui",label:"Goose Desktop",default:!0,children:[(0,o.jsx)(l.A,{extensionId:"openmetadata",extensionName:"OpenMetadata",description:"OpenMetadata integration",command:"npx",args:["-y","mcp-remote","http://localhost:8585/mcp","--auth-server-url=http://localhost:8585/mcp","--client-id=openmetadata","--verbose","--clean","--header","Authorization:${AUTH_HEADER}"]}),(0,o.jsx)(n.admonition,{title:"Configure Your Connection String",type:"info",children:(0,o.jsxs)(n.p,{children:["If needed, ",(0,o.jsx)(n.a,{href:"/docs/getting-started/using-extensions#updating-extension-properties",children:"update the extension"})," to match to your ",(0,o.jsx)(n.a,{href:"#customizing-your-connection",children:"OpenMetadata environment"}),"."]})})]}),(0,o.jsxs)(i.A,{value:"cli",label:"Goose CLI",children:[(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Run the ",(0,o.jsx)(n.code,{children:"configure"})," command:"]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"goose configure\n"})}),(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["Choose to add a ",(0,o.jsx)(n.code,{children:"Command-line Extension"})]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c6  What type of extension would you like to add?\n  \u2502  \u25cb Built-in Extension \n  // highlight-start    \n  \u2502  \u25cf Command-line Extension (Run a local command or script)\n  // highlight-end    \n  \u2502  \u25cb Remote Extension \n  \u2514 \n"})}),(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"Name your extension"}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What type of extension would you like to add?\n  \u2502  Command-line Extension \n  \u2502\n  // highlight-start\n  \u25c6  What would you like to call this extension?\n  \u2502  OpenMetadata\n  // highlight-end\n  \u2514 \n"})}),(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsxs)(n.li,{children:["Enter the command with an URL that matches your ",(0,o.jsx)(n.a,{href:"#customizing-your-connection",children:"OpenMetadata environment"})]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  OpenMetadata\n  \u2502\n  // highlight-start\n  \u25c6  What command should be run?\n  \u2502  npx -y mcp-remote http://localhost:8585/mcp --auth-server-url=http://localhost:8585/mcp --client-id=openmetadata --verbose --clean --header Authorization:${AUTH_HEADER}\n  // highlight-end\n  \u2514 \n"})}),(0,o.jsxs)(n.ol,{start:"5",children:["\n",(0,o.jsx)(n.li,{children:"Set the timeout (default 300s is usually sufficient)"}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  OpenMetadata\n  \u2502\n  \u25c7  What command should be run?\n  \u2502  npx -y mcp-remote http://localhost:8585/mcp --auth-server-url=http://localhost:8585/mcp --client-id=openmetadata --verbose --clean --header Authorization:${AUTH_HEADER}\n  \u2502\n  // highlight-start\n  \u25c6  Please set the timeout for this tool (in secs):\n  \u2502  300\n  // highlight-end\n  \u2514 \n"})}),(0,o.jsxs)(n.ol,{start:"6",children:["\n",(0,o.jsx)(n.li,{children:'Choose to add a description. If you select "Yes" here, you will be prompted to enter a description for the extension.'}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  OpenMetadata\n  \u2502\n  \u25c7  What command should be run?\n  \u2502  npx -y mcp-remote http://localhost:8585/mcp --auth-server-url=http://localhost:8585/mcp --client-id=openmetadata --verbose --clean --header Authorization:${AUTH_HEADER}\n  \u2502\n  \u25c7  Please set the timeout for this tool (in secs):\n  \u2502  300\n  \u2502\n  // highlight-start\n  \u25c6  Would you like to add a description?\n  \u2502  No\n  // highlight-end\n  \u2514 \n"})}),(0,o.jsxs)(n.ol,{start:"7",children:["\n",(0,o.jsxs)(n.li,{children:["Complete the configuration by added your ",(0,o.jsx)(n.a,{href:"https://docs.open-metadata.org/latest/how-to-guides/mcp#adding-a-personal-access-token-to-your-mcp-client",children:"OpenMetadata Personal Access Token (PAT)"})]}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  OpenMetadata\n  \u2502\n  \u25c7  What command should be run?\n  \u2502  npx -y mcp-remote http://localhost:8585/mcp --auth-server-url=http://localhost:8585/mcp --client-id=openmetadata --verbose --clean --header Authorization:${AUTH_HEADER}\n  \u2502     \n  \u25c7  Please set the timeout for this tool (in secs):\n  \u2502  300\n  \u2502\n  \u25c7  Would you like to add a description?\n  \u2502  No\n  \u2502    \n  // highlight-start\n  \u25c6  Would you like to add environment variables?\n  \u2502  Yes\n  \u2502 \n  \u25c7  Environment variable name:\n  \u2502  AUTH_HEADER\n  \u2502\n  \u25c7  Environment variable value:\n  \u2502  "Bearer <YOUR_OpenMetadata_PAT>"\n  \u2502\n  \u25c7  Add another environment variable?\n  \u2502  No\n  \u2502\n// highlight-end\n  \u2514  Added OpenMetadata extension\n'})})]})]}),"\n",(0,o.jsx)(n.h2,{id:"available-operations",children:"Available Operations"}),"\n",(0,o.jsx)(n.p,{children:"The OpenMetadata extension provides comprehensive metadata management capabilities through natural language interactions. You can perform a wide range of operations including:"}),"\n",(0,o.jsx)(n.h3,{id:"openmetadata-operations",children:"OpenMetadata Operations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"search_metadata"})," Find data assets and business terms in your OpenMetadata catalog."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"get_entity_details"})," Retrieve detailed information about a specific entity using its fully qualified name."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"create_glossary"})," Create a new glossary to organize business terms and definitions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"create_glossary_term"})," Create a new term within an existing glossary, with support for hierarchical relationships."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"get_entity_lineage"})," Retrieve upstream and downstream lineage information for any entity to understand data dependencies and impact analysis."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Just describe what you want to accomplish in natural language, and Goose will help you execute the appropriate OpenMetadata operations safely and efficiently."}),"\n",(0,o.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsxs)(n.p,{children:["In this example, Goose looks at the metadata for a Redshift table named ",(0,o.jsx)(n.code,{children:"customers"})," stored in OpenMetadata, particularly its lineage. If the lineage does not show that a Databricks table named ",(0,o.jsx)(n.code,{children:"customerinfo"})," is used to build ",(0,o.jsx)(n.code,{children:"customers"}),", Goose will add it."]}),"\n",(0,o.jsx)(n.h4,{id:"goose-prompt",children:"Goose Prompt"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"which tables are used to create my customers table in redshift? if the databricks table customerinfo is not already, add it to the customers table lineage.\n"})}),"\n",(0,o.jsx)(n.h4,{id:"goose-output",children:"Goose Output"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Based on my analysis, I found your Redshift customers table at `redshift prod.dev.dbt_jaffle.customers`. Here are the tables currently used to create it:\n\n##### Current Upstream Tables for Redshift Customers Table\n###### Direct Dependencies:\n1. `redshift prod.dev.dbt_jaffle.stg_customers` (Staging Table for Customers)\n2. `redshift prod.dev.dbt_jaffle.stg_payments`\n3. `redshift prod.dev.dbt_jaffle.stg_orders`\n\n######Indirect Dependencies (Raw Tables):\n4. `redshift prod.dev.dbt_jaffle.raw_customers` \u2192 feeds into `stg_customers`\n5. `redshift prod.dev.dbt_jaffle.raw_payments` \u2192 feeds into `stg_payments`\n6. `redshift prod.dev.dbt_jaffle.raw_orders` \u2192 feeds into `stg_orders`\n\n######Missing Databricks CustomerInfo Table\nI found your Databricks `customerinfo` table at:\n\n`DatabricksBanking.demo.mssqlbanking_customer.customerinfo`\nThis table is NOT currently connected to your Redshift customers table lineage.\n\nI have successfully created the lineage between the Databricks customerinfo table and the Redshift customers table. Here's what I accomplished:\n######Lineage Created Successfully\nSource Table (Databricks):\n\nName: `customerinfo`\nFull Name: `DatabricksBanking.demo.mssqlbanking_customer.customerinfo`\nPlatform: Databricks\nColumns: customerid, firstname, lastname, dateofbirth, email, phonenumber, _fivetran_deleted, _fivetran_synced\n\nTarget Table (Redshift):\n\nName: `customers`\nFull Name: `redshift prod.dev.dbt_jaffle.customers`\nPlatform: Redshift\nColumns: customer_id, first_name, last_name, first_order, most_recent_order, number_of_orders, customer_lifetime_value\n\nThe lineage relationship now shows that the Databricks customerinfo table is an upstream source that feeds data to create the Redshift customers table. This relationship will be visible in OpenMetadata's lineage view, helping you track data flow and understand dependencies between your Databricks and Redshift systems.\nYou can now view this lineage in the OpenMetadata UI by navigating to either table and checking the \"Lineage\" tab to see the connection between these customer data assets.\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},79329:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var a=t(34164);const o={tabItem:"tabItem_Ymn6"};var s=t(74848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,r),hidden:t,children:n})}},65537:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(96540),o=t(34164),s=t(65627),r=t(56347),i=t(50372),l=t(30604),d=t(11861),c=t(78749);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,r.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})}),[s,o])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,s=h(e),[r,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[d,u]=m({queryString:t,groupId:o}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,s]=(0,c.Dv)(t);return[o,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:o}),x=(()=>{const e=d??g;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{x&&l(x)}),[x]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=t(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function v(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),o=i[t].value;o!==a&&(d(n),r(o))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:c,...s,className:(0,o.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,b.jsx)(v,{...n,...e}),(0,b.jsx)(j,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(n))}},9888:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var a=t(71112),o=t(74848);function s(e){let{extensionId:n,extensionName:t,description:s,type:r,command:i,args:l,url:d,envVars:c=[],apiKeyLink:u,apiKeyLinkText:h,customStep3:p,hasEnvVars:m,appendToStep3:g}=e;const f=r||(i?"stdio":d?"sse":"stdio"),x=(()=>{if(p)return p;if(u&&h)return(0,o.jsxs)(o.Fragment,{children:["Get your ",(0,o.jsx)("a",{href:u,children:h})," and paste it in"]});if(c.length>0){const e=c.map((e=>e.name)).join(", "),n="http"===f,t=n?"header":"environment variable",a=n?"headers":"environment variables";return`Obtain your ${e} and paste ${c.length>1?`them as ${a}`:`it as a ${t}`}`}return null})(),b=g?(0,o.jsxs)(o.Fragment,{children:[x,x?(0,o.jsx)("br",{}):null,g]}):x,v=m??null!==b;return(0,o.jsx)("div",{children:(0,o.jsxs)("ol",{children:[(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:(()=>{let e=[];"http"===f&&e.push("type=streamable_http"),d?e.push(`url=${encodeURIComponent(d)}`):i&&l&&(e.push(`cmd=${encodeURIComponent(i)}`),e.push(...l.map((e=>`arg=${encodeURIComponent(e)}`)))),e.push(`id=${encodeURIComponent(n)}`,`name=${encodeURIComponent(t)}`,`description=${encodeURIComponent(s)}`);const a="http"===f?"header":"env";return e.push(...c.map((e=>`${a}=${encodeURIComponent(`${e.name}=${e.label}`)}`))),`goose://extension?${e.join("&")}`})(),children:"Launch the installer"})}),(0,o.jsxs)("li",{children:["Click ",(0,o.jsx)("code",{children:"OK"})," to confirm the installation"]}),v&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("li",{children:b}),(0,o.jsxs)("li",{children:["Click ",(0,o.jsx)("code",{children:"Add Extension"})]})]}),(0,o.jsxs)("li",{children:["Click the ",(0,o.jsx)(a.A,{className:"inline",size:16})," button in the top-left to open the sidebar"]}),(0,o.jsx)("li",{children:"Navigate to the chat"})]})})}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var a=t(96540);const o={},s=a.createContext(o);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:n},e.children)}},75395:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(96540);const o=(...e)=>e.filter(((e,n,t)=>Boolean(e)&&""!==e.trim()&&t.indexOf(e)===n)).join(" ").trim();var s={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const r=(0,a.forwardRef)((({color:e="currentColor",size:n=24,strokeWidth:t=2,absoluteStrokeWidth:r,className:i="",children:l,iconNode:d,...c},u)=>(0,a.createElement)("svg",{ref:u,...s,width:n,height:n,stroke:e,strokeWidth:r?24*Number(t)/Number(n):t,className:o("lucide",i),...c},[...d.map((([e,n])=>(0,a.createElement)(e,n))),...Array.isArray(l)?l:[l]]))),i=(e,n)=>{const t=(0,a.forwardRef)((({className:t,...s},i)=>{return(0,a.createElement)(r,{ref:i,iconNode:n,className:o(`lucide-${l=e,l.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,t),...s});var l}));return t.displayName=`${e}`,t}},71112:(e,n,t)=>{t.d(n,{A:()=>a});const a=(0,t(75395).A)("PanelLeft",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}],["path",{d:"M9 3v18",key:"fh3hqa"}]])}}]);