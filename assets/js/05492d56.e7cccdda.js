"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[1780],{21822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var o=n(36991),i=n(74848),s=n(28453);const r={title:"Streamlining Detection Development with Goose Recipes",description:"A comprehensive guide to using recipes in Goose to streamline security detection development",authors:["glenn"]},a=void 0,c={authorsImageUrls:[void 0]},l=[];function d(e){const t={a:"a",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"blog cover",src:n(57977).A+"",width:"1536",height:"1024"})}),"\n",(0,i.jsx)(t.p,{children:"Creating effective security detections in Panther traditionally requires deep knowledge of detection logic, testing frameworks, and development workflows. The detection engineering team at Block has streamlined this process by building Goose recipes that automate the entire detection creation lifecycle from initial repository setup to pull request creation."}),"\n",(0,i.jsxs)(t.p,{children:["This blog post explores how to leverage Goose's ",(0,i.jsx)(t.a,{href:"https://block.github.io/goose/docs/guides/recipes/",children:"recipe"})," and ",(0,i.jsx)(t.a,{href:"https://block.github.io/goose/docs/guides/recipes/sub-recipes",children:"sub-recipe"})," system to create new detections in Panther with minimal manual intervention, ensuring consistency, quality, and adherence to team standards."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},57977:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/goose-recipes-detection-development-cover-cac8a9bea2d090ec2758a0b907bc9da8.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(96540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},36991:e=>{e.exports=JSON.parse('{"permalink":"/goose/blog/2025/07/28/streamlining-detection-development-with-goose-recipes","source":"@site/blog/2025-07-28-streamlining-detection-development-with-goose-recipes/index.md","title":"Streamlining Detection Development with Goose Recipes","description":"A comprehensive guide to using recipes in Goose to streamline security detection development","date":"2025-07-28T00:00:00.000Z","tags":[],"readingTime":17.875,"hasTruncateMarker":true,"authors":[{"name":"Glenn Edwards","title":"Detection Engineer","page":{"permalink":"/goose/blog/authors/glenn"},"socials":{"linkedin":"https://www.linkedin.com/in/glennpedwardsjr/","github":"https://github.com/hiddenillusion","x":"https://x.com/hiddenillusion","bluesky":"https://bsky.app/profile/hiddenillusion"},"imageURL":"https://avatars.githubusercontent.com/u/1418309?v=4","key":"glenn"}],"frontMatter":{"title":"Streamlining Detection Development with Goose Recipes","description":"A comprehensive guide to using recipes in Goose to streamline security detection development","authors":["glenn"]},"unlisted":false,"prevItem":{"title":"When AI Meets AI: Goose Desktop and CLI Collaborate","permalink":"/goose/blog/2025/07/28/ai-to-ai"},"nextItem":{"title":"Orchestrating 6 Subagents to Build a Collaborative API Playground for Kids","permalink":"/goose/blog/2025/07/21/orchestrating-subagents"}}')}}]);