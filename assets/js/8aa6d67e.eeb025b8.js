"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[6845],{38002:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"mcp/playwright-mcp","title":"Playwright Extension","description":"Add Playwright MCP Server as a Goose Extension for Modern Web Testing","source":"@site/docs/mcp/playwright-mcp.md","sourceDirName":"mcp","slug":"/mcp/playwright-mcp","permalink":"/goose/docs/mcp/playwright-mcp","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Playwright Extension","description":"Add Playwright MCP Server as a Goose Extension for Modern Web Testing"},"sidebar":"tutorialSidebar","previous":{"title":"Pieces for Developers Extension","permalink":"/goose/docs/mcp/pieces-mcp"},"next":{"title":"PostgreSQL Extension","permalink":"/goose/docs/mcp/postgres-mcp"}}');var i=t(74848),s=t(28453),r=t(65537),a=t(79329),l=t(25887),c=t(9888);const d={title:"Playwright Extension",description:"Add Playwright MCP Server as a Goose Extension for Modern Web Testing"},h=void 0,u={},m=[{value:"Configuration",id:"configuration",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Goose Prompt",id:"goose-prompt",level:3},{value:"Goose Output",id:"goose-output",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.A,{videoUrl:"https://www.youtube.com/embed/iAxiFMlTE1Q"}),"\n",(0,i.jsx)(n.p,{children:"This tutorial covers how to add the Playwright MCP Server as a Goose extension, to enable cross-browser testing and web automation across Chromium and Webkit."}),"\n",(0,i.jsx)(n.admonition,{title:"TLDR",type:"tip",children:(0,i.jsxs)(r.A,{groupId:"interface",children:[(0,i.jsx)(a.A,{value:"ui",label:"Goose Desktop",default:!0,children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"goose://extension?cmd=npx&arg=-y&arg=@playwright/mcp@latest&id=playwright&name=Playwright&description=Modern%20web%20testing%20and%20automation",children:"Launch the installer"})})}),(0,i.jsxs)(a.A,{value:"cli",label:"Goose CLI",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx -y @playwright/mcp@latest\n"})})]})]})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Note that you'll need ",(0,i.jsx)(n.a,{href:"https://nodejs.org/",children:"Node.js"})," installed on your system to run this command, as it uses ",(0,i.jsx)(n.code,{children:"npx"}),"."]})}),"\n",(0,i.jsxs)(r.A,{groupId:"interface",children:[(0,i.jsx)(a.A,{value:"ui",label:"Goose Desktop",default:!0,children:(0,i.jsx)(c.A,{extensionId:"playwright",extensionName:"Playwright",description:"Modern web testing and automation",command:"npx",args:["-y","@playwright/mcp@latest"]})}),(0,i.jsxs)(a.A,{value:"cli",label:"Goose CLI",children:[(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Run the ",(0,i.jsx)(n.code,{children:"configure"})," command:"]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"goose configure\n"})}),(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Choose to add a ",(0,i.jsx)(n.code,{children:"Command-line Extension"})]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c6  What type of extension would you like to add?\n  \u2502  \u25cb Built-in Extension \n  // highlight-start    \n  \u2502  \u25cf Command-line Extension (Run a local command or script)\n  // highlight-end    \n  \u2502  \u25cb Remote Extension (SSE) \n  \u2502  \u25cb Remote Extension (Streaming HTTP) \n  \u2514 \n"})}),(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Give your extension a name"}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What type of extension would you like to add?\n  \u2502  Command-line Extension \n  \u2502\n  \u25c6  What would you like to call this extension?\n  \u2502  Playwright\n  \u2514 \n"})}),(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Enter the command"}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What type of extension would you like to add?\n  \u2502  Command-line Extension \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  Playwright\n  \u2502\n  \u25c6  What command should be run?\n  \u2502  npx -y @playwright/mcp@latest\n  \u2514 \n"})}),(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"Enter the number of seconds Goose should wait for actions to complete before timing out. Default is 300s"}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What type of extension would you like to add?\n  \u2502  Command-line Extension \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  Playwright\n  \u2502\n  \u25c7  What command should be run?\n  \u2502  npx -y @playwright/mcp@latest\n  \u2502\n  \u25c6  Please set the timeout for this tool (in secs):\n  \u2502  300\n  \u2514 \n"})}),(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:'Choose to add a description. If you select "Yes" here, you will be prompted to enter a description for the extension.'}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What type of extension would you like to add?\n  \u2502  Command-line Extension \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  Playwright\n  \u2502\n  \u25c7  What command should be run?\n  \u2502  npx -y @playwright/mcp@latest\n  \u2502\n  \u25c7  Please set the timeout for this tool (in secs):\n  \u2502  300\n  \u2502\n  \u25c6  Would you like to add a description?\n  \u2502  No\n  \u2514 \n"})}),(0,i.jsxs)(n.ol,{start:"7",children:["\n",(0,i.jsx)(n.li,{children:"Choose No when asked to add environment variables"}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"  \u250c   goose-configure \n  \u2502\n  \u25c7  What would you like to configure?\n  \u2502  Add Extension (Connect to a new extension) \n  \u2502\n  \u25c7  What type of extension would you like to add?\n  \u2502  Command-line Extension \n  \u2502\n  \u25c7  What would you like to call this extension?\n  \u2502  Playwright\n  \u2502\n  \u25c7  What command should be run?\n  \u2502  npx -y @playwright/mcp@latest\n  \u2502\n  \u25c7  Please set the timeout for this tool (in secs):\n  \u2502  300\n  \u2502\n  \u25c7  Would you like to add a description?\n  \u2502  No\n  \u2502\n  \u25c6  Would you like to add environment variables?\n  \u2502  No \n  \u2502\n  \u2514  Added Playwright extension\n"})})]})]}),"\n",(0,i.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,i.jsx)(n.p,{children:"Let's use Goose with the Playwright extension to create a cross-browser testing suite. In this example, we'll demonstrate how Goose can help you:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Test a web application across multiple browsers"}),"\n",(0,i.jsx)(n.li,{children:"Generate maintainable test code"}),"\n",(0,i.jsx)(n.li,{children:"Capture screenshots for visual comparison"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"LLM",type:"info",children:(0,i.jsx)(n.p,{children:"Anthropic's Claude 4 Sonnet was used for this task."})}),"\n",(0,i.jsx)(n.h3,{id:"goose-prompt",children:"Goose Prompt"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Test the random redesign generator app (https://blackgirlbytes.github.io/random-redesign-picker/) \nin Chromium and WebKit. For each browser:\n1. Navigate to the page\n2. Click the "Pick My Combo" button\n3. Verify the text changes\n4. Take a screenshot\nThen generate a Playwright test that works across all browsers.\n'})}),"\n",(0,i.jsx)(n.h3,{id:"goose-output",children:"Goose Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Let's start with Chromium:\n\n\u2500\u2500\u2500 browser_navigate | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nurl: https://blackgirlbytes.github....\n\nNow let's wait for and click the button:\n\n\u2500\u2500\u2500 browser_click | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nelement: button with text \"Pick My Combo\"\nref: <button>\n\nLet's capture the first combo and click again to verify it changes:\n\n\u2500\u2500\u2500 browser_click | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nelement: button with text \"Pick My Combo\"\nref: <button>\n\nLet's take a screenshot of the Chromium view:\n\n\u2500\u2500\u2500 browser_take_screenshot | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nfilename: chromium-redesign.png\n\nNow let's test in Safari. I'll open a new tab for Safari:\n\n\u2500\u2500\u2500 browser_tab_new | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nurl: https://blackgirlbytes.github....\n\nLet's click the button in Safari:\n\n\u2500\u2500\u2500 browser_click | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nelement: button with text \"Pick My Combo\"\nref: <button>\n\nLet's click again to verify the text changes:\n\n\u2500\u2500\u2500 browser_click | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nelement: button with text \"Pick My Combo\"\nref: <button>\n\nLet's take a screenshot of the Safari view:\n\n\u2500\u2500\u2500 browser_take_screenshot | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nfilename: safari-redesign.png\n\nNow I'll generate a Playwright test that runs in all three browser environments. The test will verify the core functionality we just tested manually:\n\n\u2500\u2500\u2500 browser_generate_playwright_test | playwright \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nname: Random Redesign Picker Test\ndescription: Test the random redesign generator functionality across browsers\nsteps: [\n  \"Navigate to the application\",\n  \"Verify initial page content\",\n  \"Click button to generate first combination\",\n  \"Click button again to generate second combination\",\n  \"Verify combinations are different\"\n]\n\nHere's the generated Playwright test that will run across Chromium, Firefox, and Safari:\n\nimport { test, expect } from '@playwright/test';\n\ntest.describe('Random Redesign Picker', () => {\n  test('should generate different random combinations', async ({ page }) => {\n    // Navigate to the application\n    await page.goto('https://blackgirlbytes.github.io/random-redesign-picker/');\n    \n    // Verify initial page content\n    await expect(page).toHaveTitle('Redesign for the Ridiculous');\n    await expect(page.getByRole('heading', { level: 1 })).toContainText('\ud83c\udfb2 Redesign for the Ridiculous');\n    \n    // Verify button is visible\n    const comboButton = page.getByRole('button', { name: '\ud83c\udf89 Pick My Combo' });\n    await expect(comboButton).toBeVisible();\n    \n    // Click button and get first combination\n    await comboButton.click();\n    \n    // Wait for and store first combo\n    const firstComboElement = page.locator('generic').filter({ hasText: /^(?!.*\ud83c\udfb2).*$/ }).last();\n    await expect(firstComboElement).toBeVisible();\n    const firstComboText = await firstComboElement.textContent();\n    \n    // Generate second combination\n    await comboButton.click();\n    \n    // Wait for and get second combo\n    const secondComboElement = page.locator('generic').filter({ hasText: /^(?!.*\ud83c\udfb2).*$/ }).last();\n    await expect(secondComboElement).toBeVisible();\n    const secondComboText = await secondComboElement.textContent();\n    \n    // Verify combos are different\n    expect(secondComboText).not.toEqual(firstComboText);\n  });\n});\n\nTo use this test, you would need to:\n\n1. Save it as `tests/random-redesign.spec.ts`\n2. Configure your `playwright.config.ts` to include all three browsers:\n\nimport { PlaywrightTestConfig } from '@playwright/test';\n\nconst config: PlaywrightTestConfig = {\n  projects: [\n    {\n      name: 'chromium',\n      use: { browserName: 'chromium' },\n    },\n    {\n      name: 'firefox',\n      use: { browserName: 'firefox' },\n    },\n    {\n      name: 'webkit',\n      use: { browserName: 'webkit' },\n    },\n  ],\n};\n\nexport default config;\n\nYou can then run the tests using:\n\nnpx playwright test\n\nThis will execute the test in all three browser environments. The test verifies:\n1. The page loads correctly\n2. The title and heading are correct\n3. The combo button is visible\n4. Clicking the button generates a combination\n5. Clicking again generates a different combination\n\nThe test uses robust selectors and proper waiting mechanisms to ensure reliability across different browsers and network conditions.\n"})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},9888:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var o=t(71112),i=t(74848);function s(e){let{extensionId:n,extensionName:t,description:s,type:r,command:a,args:l,url:c,envVars:d=[],apiKeyLink:h,apiKeyLinkText:u,customStep3:m,hasEnvVars:p,appendToStep3:g}=e;const x=r||(a?"stdio":c?"sse":"stdio"),w=(()=>{if(m)return m;if(h&&u)return(0,i.jsxs)(i.Fragment,{children:["Get your ",(0,i.jsx)("a",{href:h,children:u})," and paste it in"]});if(d.length>0){const e=d.map((e=>e.name)).join(", "),n="http"===x,t=n?"header":"environment variable",o=n?"headers":"environment variables";return`Obtain your ${e} and paste ${d.length>1?`them as ${o}`:`it as a ${t}`}`}return null})(),b=g?(0,i.jsxs)(i.Fragment,{children:[w,w?(0,i.jsx)("br",{}):null,g]}):w,f=p??null!==b;return(0,i.jsx)("div",{children:(0,i.jsxs)("ol",{children:[(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:(()=>{let e=[];"http"===x&&e.push("type=streamable_http"),c?e.push(`url=${encodeURIComponent(c)}`):a&&l&&(e.push(`cmd=${encodeURIComponent(a)}`),e.push(...l.map((e=>`arg=${encodeURIComponent(e)}`)))),e.push(`id=${encodeURIComponent(n)}`,`name=${encodeURIComponent(t)}`,`description=${encodeURIComponent(s)}`);const o="http"===x?"header":"env";return e.push(...d.map((e=>`${o}=${encodeURIComponent(`${e.name}=${e.label}`)}`))),`goose://extension?${e.join("&")}`})(),children:"Launch the installer"})}),(0,i.jsxs)("li",{children:["Click ",(0,i.jsx)("code",{children:"OK"})," to confirm the installation"]}),f&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("li",{children:b}),(0,i.jsxs)("li",{children:["Click ",(0,i.jsx)("code",{children:"Add Extension"})]})]}),(0,i.jsxs)("li",{children:["Click the ",(0,i.jsx)(o.A,{className:"inline",size:16})," button in the top-left to open the sidebar"]}),(0,i.jsx)("li",{children:"Navigate to the chat"})]})})}},25887:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var o=t(52362),i=t(74848);const s=e=>{let{videoUrl:n}=e;return(0,i.jsxs)("div",{children:[(0,i.jsx)(o.A,{type:"info",icon:"\ud83c\udfa5",title:"Plug & Play",className:"alert--video",children:(0,i.jsxs)("details",{children:[(0,i.jsx)("summary",{children:"Watch the demo"}),(0,i.jsx)("div",{style:{textAlign:"center",margin:"20px 0"},children:(0,i.jsx)("iframe",{width:"100%",height:"540",src:n,title:"YouTube Short",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})})]})}),(0,i.jsx)("hr",{})]})}}}]);