"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[4593],{8552:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"guides/recipes/sub-recipes","title":"Sub-Recipes For Specialized Tasks","description":"Learn how a recipe can use sub-recipes to perform specific tasks","source":"@site/docs/guides/recipes/sub-recipes.md","sourceDirName":"guides/recipes","slug":"/guides/recipes/sub-recipes","permalink":"/goose/docs/guides/recipes/sub-recipes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Sub-Recipes For Specialized Tasks","sidebar_label":"Sub-Recipes","description":"Learn how a recipe can use sub-recipes to perform specific tasks"},"sidebar":"tutorialSidebar","previous":{"title":"Saving Recipes","permalink":"/goose/docs/guides/recipes/storing-recipes"},"next":{"title":"Managing Projects","permalink":"/goose/docs/guides/managing-projects"}}');var s=i(74848),r=i(28453);const a={sidebar_position:4,title:"Sub-Recipes For Specialized Tasks",sidebar_label:"Sub-Recipes",description:"Learn how a recipe can use sub-recipes to perform specific tasks"},o=void 0,c={},l=[{value:"How Sub-Recipes Work",id:"how-sub-recipes-work",level:2},{value:"Parameter Handling",id:"parameter-handling",level:3},{value:"Examples",id:"examples",level:2},{value:"Sequential Processing",id:"sequential-processing",level:3},{value:"Conditional Processing",id:"conditional-processing",level:3},{value:"Context-Based Parameter Passing",id:"context-based-parameter-passing",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Learn More",id:"learn-more",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Sub-recipes are recipes that are used by another recipe to perform specific tasks. They enable:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-step workflows"})," - Break complex tasks into distinct phases with specialized expertise"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reusable components"})," - Create common tasks that can be used in various workflows"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Experimental Feature",type:"warning",children:(0,s.jsx)(n.p,{children:"Sub-recipes are an experimental feature in active development. Behavior and configuration may change in future releases."})}),"\n",(0,s.jsx)(n.h2,{id:"how-sub-recipes-work",children:"How Sub-Recipes Work"}),"\n",(0,s.jsxs)(n.p,{children:['The "main recipe" registers its sub-recipes in the ',(0,s.jsx)(n.code,{children:"sub_recipes"})," field, which contains the following fields:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": Unique identifier for the sub-recipe, used to generate the tool name"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"}),": File path to the sub-recipe file (relative or absolute)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"values"}),": (Optional) Pre-configured parameter values that are always passed to the sub-recipe"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"When the main recipe is run, Goose generates a tool for each sub-recipe that:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accepts parameters defined by the sub-recipe"}),"\n",(0,s.jsx)(n.li,{children:"Executes the sub-recipe in a separate session with its own context"}),"\n",(0,s.jsx)(n.li,{children:"Returns output to the main recipe"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Sub-recipe sessions run in isolation - they don't share conversation history, memory, or state with the main recipe or other sub-recipes. Additionally, sub-recipes cannot define their own sub-recipes (no nesting allowed)."}),"\n",(0,s.jsx)(n.h3,{id:"parameter-handling",children:"Parameter Handling"}),"\n",(0,s.jsxs)(n.p,{children:["Parameters received by sub-recipes can be used in prompts and instructions using ",(0,s.jsx)(n.code,{children:"{{ parameter_name }}"})," syntax. Sub-recipes receive parameters in two ways:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pre-set values"}),": Fixed parameter values defined in the ",(0,s.jsx)(n.code,{children:"values"})," field are automatically provided and cannot be overridden at runtime"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context-based parameters"}),": The AI agent can extract parameter values from the conversation context, including results from previous sub-recipes"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Pre-set values take precedence over context-based parameters. If both the conversation context and ",(0,s.jsx)(n.code,{children:"values"})," field provide the same parameter, the ",(0,s.jsx)(n.code,{children:"values"})," version is used."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"indent()"})," filter to maintain valid YAML format when passing multi-line parameter values to sub-recipes, for example: ",(0,s.jsx)(n.code,{children:"{{ content | indent(2) }}"}),". See ",(0,s.jsx)(n.a,{href:"/docs/guides/recipes/recipe-reference#template-support",children:"Template Support"})," for more details."]})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"sequential-processing",children:"Sequential Processing"}),"\n",(0,s.jsx)(n.p,{children:"This Code Review Pipeline example shows a main recipe that uses two sub-recipes to perform a comprehensive code review:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"goose run --recipe code-review-pipeline.yaml --params repository_path=/path/to/repo\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Main Recipe:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# code-review-pipeline.yaml\nversion: "1.0.0"\ntitle: "Code Review Pipeline"\ndescription: "Automated code review using sub-recipes"\ninstructions: |\n  Perform a code review using the available sub-recipe tools.\n  Run security analysis first, then code quality analysis.\n\nparameters:\n  - key: repository_path\n    input_type: string\n    requirement: required\n    description: "Path to the repository to review"\n\nsub_recipes:\n  - name: "security_scan"\n    path: "./sub-recipes/security-analysis.yaml"\n    values:\n      scan_level: "comprehensive"\n  \n  - name: "quality_check"\n    path: "./sub-recipes/quality-analysis.yaml"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Review the code at {{ repository_path }} using the sub-recipe tools.\n  Run security scan first, then quality analysis.\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sub-Recipes:"})}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"security_scan"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# sub-recipes/security-analysis.yaml\nversion: "1.0.0"\ntitle: "Security Scanner"\ndescription: "Analyze code for security vulnerabilities"\ninstructions: |\n  You are a security expert. Analyze the provided code for security issues.\n  Focus on common vulnerabilities like SQL injection, XSS, and authentication flaws.\n\nparameters:\n  - key: repository_path\n    input_type: string\n    requirement: required\n    description: "Path to the code to analyze"\n  \n  - key: scan_level\n    input_type: string\n    requirement: optional\n    default: "standard"\n    description: "Depth of security scan (basic, standard, comprehensive)"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Perform a {{ scan_level }} security analysis on the code at {{ repository_path }}.\n  Report any security vulnerabilities found with severity levels and recommendations.\n'})})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"quality_check"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# sub-recipes/quality-analysis.yaml\nversion: "1.0.0"\ntitle: "Code Quality Analyzer"\ndescription: "Analyze code quality and best practices"\ninstructions: |\n  You are a code quality expert. Review code for maintainability, \n  readability, and adherence to best practices.\n\nparameters:\n  - key: repository_path\n    input_type: string\n    requirement: required\n    description: "Path to the code to analyze"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Analyze the code quality at {{ repository_path }}.\n  Check for code smells, complexity issues, and suggest improvements.\n'})})]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["For faster execution when sub-recipes are independent, see ",(0,s.jsx)(n.a,{href:"/docs/tutorials/sub-recipes-in-parallel",children:"Running Sub-Recipes In Parallel"})," to execute multiple sub-recipes concurrently."]})}),"\n",(0,s.jsx)(n.h3,{id:"conditional-processing",children:"Conditional Processing"}),"\n",(0,s.jsx)(n.p,{children:"This Smart Project Analyzer example shows conditional logic that chooses between different sub-recipes based on analysis:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"goose run --recipe smart-analyzer.yaml --params repository_path=/path/to/project\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Main Recipe:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# smart-analyzer.yaml\nversion: "1.0.0"\ntitle: "Smart Project Analyzer"\ndescription: "Analyze project and choose appropriate processing based on type"\ninstructions: |\n  First examine the repository to determine the project type (web app, CLI tool, library, etc.).\n  Based on what you find:\n  - If it\'s a web application, use the web_security_audit sub-recipe\n  - If it\'s a CLI tool or library, use the api_documentation sub-recipe\n  Only run one sub-recipe based on your analysis.\n\nparameters:\n  - key: repository_path\n    input_type: string\n    requirement: required\n    description: "Path to the repository to analyze"\n\nsub_recipes:\n  - name: "web_security_audit"\n    path: "./sub-recipes/web-security.yaml"\n    values:\n      check_cors: "true"\n      check_csrf: "true"\n  \n  - name: "api_documentation"\n    path: "./sub-recipes/api-docs.yaml"\n    values:\n      format: "markdown"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Analyze the project at {{ repository_path }} and determine its type.\n  Then run the appropriate sub-recipe tool based on your findings.\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sub-Recipes:"})}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"web_security_audit"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# sub-recipes/web-security.yaml\nversion: "1.0.0"\ntitle: "Web Security Auditor"\ndescription: "Security audit for web applications"\ninstructions: |\n  You are a web security specialist. Audit web applications for \n  security vulnerabilities specific to web technologies.\n\nparameters:\n  - key: repository_path\n    input_type: string\n    requirement: required\n    description: "Path to the web application code"\n  \n  - key: check_cors\n    input_type: string\n    requirement: optional\n    default: "false"\n    description: "Whether to check CORS configuration"\n  \n  - key: check_csrf\n    input_type: string\n    requirement: optional\n    default: "false"\n    description: "Whether to check CSRF protection"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Perform a web security audit on {{ repository_path }}.\n  {% if check_cors == "true" %}Check CORS configuration for security issues.{% endif %}\n  {% if check_csrf == "true" %}Verify CSRF protection is properly implemented.{% endif %}\n  Focus on web-specific vulnerabilities like XSS, authentication flaws, and session management.\n'})})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"api_documentation"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# sub-recipes/api-docs.yaml\nversion: "1.0.0"\ntitle: "API Documentation Generator"\ndescription: "Generate documentation for APIs and libraries"\ninstructions: |\n  You are a technical writer specializing in API documentation.\n  Create comprehensive documentation for code libraries and APIs.\n\nparameters:\n  - key: repository_path\n    input_type: string\n    requirement: required\n    description: "Path to the code to document"\n  \n  - key: format\n    input_type: string\n    requirement: optional\n    default: "markdown"\n    description: "Output format for documentation (markdown, html, rst)"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Generate {{ format }} documentation for the code at {{ repository_path }}.\n  Include API endpoints, function signatures, usage examples, and installation instructions.\n  Focus on making it easy for developers to understand and use this code.\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"context-based-parameter-passing",children:"Context-Based Parameter Passing"}),"\n",(0,s.jsx)(n.p,{children:"This Travel Planner example shows how sub-recipes can receive parameters from conversation context, including results from previous sub-recipes:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"goose run --recipe travel-planner.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Main Recipe:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# travel-planner.yaml\nversion: "1.0.0"\ntitle: "Travel Activity Planner"\ndescription: "Get weather data and suggest appropriate activities"\ninstructions: |\n  Plan activities by first getting weather data, then suggesting activities based on conditions.\n\nprompt: |\n  Plan activities for Sydney by first getting weather data, then suggesting activities based on the weather conditions we receive.\n\nsub_recipes:\n  - name: weather_data\n    path: "./sub-recipes/weather-data.yaml"\n    # No values - location parameter comes from prompt context\n  \n  - name: activity_suggestions\n    path: "./sub-recipes/activity-suggestions.yaml"\n    # weather_conditions parameter comes from conversation context\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sub-Recipes:"})}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"weather_data"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# sub-recipes/weather-data.yaml\nversion: "1.0.0"\ntitle: "Weather Data Collector"\ndescription: "Fetch current weather conditions for a location"\ninstructions: |\n  You are a weather data specialist. Gather current weather information\n  including temperature, conditions, and seasonal context.\n\nparameters:\n  - key: location\n    input_type: string\n    requirement: required\n    description: "City or location to get weather data for"\n\nextensions:\n  - type: stdio\n    name: weather\n    cmd: uvx\n    args:\n      - mcp_weather@latest\n    timeout: 300\n    description: "Weather data for trip planning"\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Get the current weather conditions for {{ location }}.\n  Include temperature, weather conditions (sunny, rainy, etc.), \n  and any relevant seasonal information.\n'})})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"activity_suggestions"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# sub-recipes/activity-suggestions.yaml\nversion: "1.0.0"\ntitle: "Activity Recommender"\ndescription: "Suggest activities based on weather conditions"\ninstructions: |\n  You are a travel expert. Recommend appropriate activities and attractions\n  based on current weather conditions.\n\nparameters:\n  - key: weather_conditions\n    input_type: string\n    requirement: required\n    description: "Current weather conditions to base recommendations on"\n\nextensions:\n  - type: builtin\n    name: developer\n    timeout: 300\n    bundled: true\n\nprompt: |\n  Based on these weather conditions: {{ weather_conditions }}, \n  suggest appropriate activities, attractions, and travel tips.\n  Include both indoor and outdoor options as relevant.\n'})})]}),"\n",(0,s.jsx)(n.p,{children:"In this example:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"weather_data"}),' sub-recipe gets the location from the prompt context (the AI extracts "Sydney" from the natural language prompt)']}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"activity_suggestions"})," sub-recipe gets weather conditions from the conversation context (the AI uses the weather results from the first sub-recipe)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Single responsibility"}),": Each sub-recipe should have one clear purpose"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear parameters"}),": Use descriptive names and descriptions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pre-set fixed values"}),": Use ",(0,s.jsx)(n.code,{children:"values"})," for parameters that don't change"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test independently"}),": Verify sub-recipes work alone before combining"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"/docs/guides/recipes",children:"Goose Recipes"})," guide for more docs, tools, and resources to help you master Goose recipes."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);